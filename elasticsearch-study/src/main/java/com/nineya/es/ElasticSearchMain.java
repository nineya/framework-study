package com.nineya.es;import org.apache.http.HttpHost;import org.elasticsearch.action.index.IndexRequest;import org.elasticsearch.action.index.IndexResponse;import org.elasticsearch.client.RequestOptions;import org.elasticsearch.client.RestClient;import org.elasticsearch.client.RestHighLevelClient;import org.elasticsearch.client.indices.CreateIndexRequest;import org.elasticsearch.client.indices.CreateIndexResponse;import org.elasticsearch.client.indices.GetIndexRequest;import org.elasticsearch.common.settings.Settings;import org.elasticsearch.common.xcontent.XContentType;import java.io.IOException;public class ElasticSearchMain {    /**     * 创建索引     *     * @param client     */    public static void createIndex(RestHighLevelClient client) throws IOException {        boolean booleanResponse = client.indices().exists(new GetIndexRequest("twitter"), RequestOptions.DEFAULT);        if (booleanResponse) {            System.out.println("索引已存在");            return;        }        // 创建Request对象， 准备创建的索引名为twitter        CreateIndexRequest request = new CreateIndexRequest("twitter");        // 设置Request参数        request.settings(Settings.builder()                .put("index.number_of_shards", 3) // 设置分区数                .put("index.number_of_replicas", 2) // 设置副本数        );        CreateIndexResponse createIndexResponse = client.indices().create(request, RequestOptions.DEFAULT);        System.out.println("创建结果：" + createIndexResponse.isAcknowledged());    }    public static void createDocument(RestHighLevelClient client) throws IOException {        IndexRequest request = new IndexRequest();        request.index("twitter").id("1");        request.source("{\"name\": \"test\"}", XContentType.JSON);        IndexResponse indexResponse = client.index(request, RequestOptions.DEFAULT);        System.out.println(indexResponse.getResult());    }    public static void main(String[] args) throws IOException {        RestHighLevelClient client = new RestHighLevelClient(                RestClient.builder(new HttpHost("vm.nineya.com", 9200, "http")));        createIndex(client);        createDocument(client);    }}